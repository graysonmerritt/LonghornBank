@model Team4_Final_Project.Models.ViewModels.TransferViewModel

@{
    ViewData["Title"] = "Transfer";
}

<h1>Transfer</h1>

<div class="row">
    <div class="col-md-4">
        <form asp-action="Confirm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label class="control-label">From:</label>
                @Html.DropDownListFor(model => model.FromAccountID, (SelectList)ViewBag.GetAllAccountsTransfer, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label class="control-label">To:</label>
                @Html.DropDownListFor(model => model.ToAccountID, (SelectList)ViewBag.GetAllAccountsTransfer, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label asp-for="Date" class="control-label"></label>
                <input asp-for="Date" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Transfer Amount:</label>
                <input asp-for="Amount" class="form-control" />
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>
            
            @if (!User.IsInRole("Customer"))
            {
                    <div class="form-group">
                    <label asp-for="Comment" class="control-label"></label>
                    <input asp-for="Comment" class="form-control" />
                    <span asp-validation-for="Comment" class="text-danger"></span>
                </div>
            }
            <div class="form-group">
                <input type="submit" value="Transfer" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>